// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model Usuario {
  id           String      @id @default(cuid())
  nome         String
  email        String      @unique
  senhaHash    String
  role         String      @default("user") // "user", "admin", "professional"
  isActive     Boolean     @default(true)
  avaliacoes   Avaliacao[]
  profissional Profissional?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model Estado {
  id       String     @id @default(cuid())
  nome     String     @unique
  uf       String     @unique
  cidades  Cidade[]
  profissionais Profissional[]
}

model Cidade {
  id          String        @id @default(cuid())
  nome        String
  estadoId    String
  estado      Estado        @relation(fields: [estadoId], references: [id])
  bairros     Bairro[]
  profissionais Profissional[]
  
  @@unique([nome, estadoId])
}

model Bairro {
  id            String        @id @default(cuid())
  nome          String
  cidadeId      String
  cidade        Cidade        @relation(fields: [cidadeId], references: [id])
  profissionais Profissional[]
  
  @@unique([nome, cidadeId])
}

model Categoria {
  id            String         @id @default(cuid())
  nome          String         @unique
  profissionais Profissional[]
}

model Profissional {
  id               String        @id @default(cuid())
  nome             String
  email            String        @unique
  telefone         String?
  descricao        String?
  mediaEstrelas    Float         @default(0)
  totalAvaliacoes  Int           @default(0)
  categoriaId      String
  categoria        Categoria     @relation(fields: [categoriaId], references: [id])
  estadoId         String?
  estado           Estado?       @relation(fields: [estadoId], references: [id])
  cidadeId         String?
  cidade           Cidade?       @relation(fields: [cidadeId], references: [id])
  bairroId         String?
  bairro           Bairro?       @relation(fields: [bairroId], references: [id])
  usuarioId        String?
  usuario          Usuario?      @relation(fields: [usuarioId], references: [id])
  avaliacoes       Avaliacao[]
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt

  @@index([categoriaId])
  @@index([estadoId])
  @@index([cidadeId])
  @@index([bairroId])
  @@unique([usuarioId])
}

model Avaliacao {
  id              String        @id @default(cuid())
  estrelas        Int
  comentario      String?
  autorId         String
  autor           Usuario       @relation(fields: [autorId], references: [id])
  profissionalId  String
  profissional    Profissional  @relation(fields: [profissionalId], references: [id])
  createdAt       DateTime      @default(now())

  @@index([profissionalId])
  @@index([autorId])
}
